[
    {
        "query": " Q1. When a javaScript function is invoked (called) in Node, where is a new frame placed?",
        "options": [
            " the call stack\r\n",
            " the event loop\r\n",
            " the poll phase\r\n",
            " the events queue\r\n\r\n**Explanation:** From javascripttutorial: [reference](https://www.javascripttutorial.net/javascript-call-stack/#:~:text=If%20a%20function%20calls%20another,top%20of%20the%20call%20stack.)\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q2. Which of the following is a core module in Node?",
        "options": [
            " webpack\r\n",
            " crypto\r\n",
            " request\r\n",
            " chalk\r\n\r\n**Explanation:** From flaviocopes docs: [reference](https://flaviocopes.com/node-core-modules/)\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q3. Which of the following Buffer class methods returns an uninitialized buffer?",
        "options": [
            " allocUnsafe\r\n",
            " concat\r\n",
            " from\r\n",
            " alloc\r\n\r\n**Explanation:** From official docs: [reference](https://nodejs.org/dist/latest-v13.x/docs/api/buffer.html#buffer_class_method_buffer_allocunsafe_size)\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q4. Which of the following modules is NOT a built-in module in Node?",
        "options": [
            " ftp\r\n",
            " events\r\n",
            " dgram\r\n",
            " http2\r\n\r\n**Explanation:** From flaviocopes docs: [reference](https://flaviocopes.com/node-core-modules/)\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q5. Which fs module method can be used to read the content of a file without buffering it in memory?",
        "options": [
            " read\r\n",
            " readFile\r\n",
            " createReadStream\r\n",
            " readFileSync\r\n\r\n**Explanation:** _From official docs: [reference](https://nodejs.org/api/fs.html#fs_dir_read)\r\nTo minimize memory costs, when possible prefer streaming via fs.createReadStream()._\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q6. Which of the following DNS module methods uses the underlying OS facilities and does not necessarily perform any network communication?",
        "options": [
            " lookup\r\n",
            " resolve\r\n",
            " resolve4\r\n",
            " reverse\r\n\r\n**Explanation:** From official docs: [reference](https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback)\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q7. How do you check that a value is a date object in Node?",
        "options": [
            " util.types.isDate(value)\r\n",
            " assert.isDate(value)\r\n",
            " console.isDate(value)\r\n",
            " util.date(value)\r\n\r\n**Explanation:** From official docs: [reference](https://nodejs.org/api/util.html#util_util_types_isdate_value)\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q8. Can you create an https web server with Node.js?",
        "options": [
            " no, there are no modules supporting it yet\r\n",
            " yes, with the https or http2 modules\r\n",
            " yes, through the path module\r\n",
            " yes, with the http module\r\n\r\n**Explanation:** From official docs: [reference](https://nodejs.dev/learn/making-http-requests-with-nodejs)\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q9. What is the Api that is designed to insulate Addons from changes in the underlying JavaScript engine?",
        "options": [
            " A-API\r\n",
            " Z-API\r\n",
            " N-API\r\n",
            " X-API\r\n\r\n**Explanation:** From official docs: [reference](https://nodejs.org/api/n-api.html#n_api_node_api)\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q10. Which CLI option can you use to debug a node script in Chrome DevTools?",
        "options": [
            " --dev-tools\r\n",
            " --inspect\r\n",
            " --chrome\r\n",
            " --debug\r\n\r\n**Explanation:** From official docs: [reference](https://nodejs.org/en/docs/guides/debugging-getting-started/)\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q11. How can you count the number of logical CPUs on the machine that is running Node?",
        "options": [
            " node -p \"process.cpus\"\r\n",
            " node -p \"util.cpus().size\"\r\n",
            " node -p \"process.os.cpus\"\r\n",
            " node -p \"os.cpus().length\"\r\n\r\n**Explanation:** From coderrocketfuel docs: [reference](https://coderrocketfuel.com/article/get-the-number-of-system-cpu-cores-using-node-js)\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q12. Which of the following is a method on the console object?",
        "options": [
            " exit\r\n",
            " test\r\n",
            " time\r\n",
            " print\r\n\r\n**Explanation:** From official docs: [reference](https://nodejs.org/api/console.html)\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q13. Which object is used to manage the cache of required modules?",
        "options": [
            " global.cache\r\n",
            " module.cache\r\n",
            " process.cache\r\n",
            " require.cache\r\n\r\n**Explanation:** From official docs: [reference](https://nodejs.org/api/modules.html#modules_require_cache)\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q14. What is the command to silence all process warnings?",
        "options": [
            " node index.js --trace-warnings\r\n",
            " node --no-warnings\r\n",
            " node -trace-warnings\r\n",
            " node index.js --no-warnings\r\n\r\n**Explanation:** From official docs: [reference](https://nodejs.org/api/cli.html#cli_no_warnings)\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q15. How can you use the promise API with a callback-based function such as child_process.exec?",
        "options": [
            " new Promise(child_process.exec())\r\n",
            " util.promisify(child_process.exec())\r\n",
            " util.promisify(child_process.exec)\r\n",
            " new Promise(child_process.exec)\r\n\r\n**Explanation:** From official docs: [reference](https://nodejs.org/api/child_process.html)\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q16. Which of the following is NOT a Node repl command?",
        "options": [
            " .break\r\n",
            " .history\r\n",
            " .editor\r\n",
            " .save\r\n\r\n**Explanation:** From official docs: [reference](https://nodejs.org/api/repl.html#repl_commands_and_special_keys)\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q17. Which statement is true when you run the code shown below?",
        "options": [
            " The forked process shares the event loop with the parent process\r\n",
            " A new VM instance is created and the two VM instances will be shared between the forked process and the parent process.\r\n",
            " The forked process will have its own VM instance.\r\n",
            " The forked process shares the same VM thread with the parent process.\r\n\r\n**Explanation:** From official docs: [reference](https://nodejs.org/api/child_process.html#child_process_child_process_fork_modulepath_args_options)\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q18. If EventEmitter is in scope, which of the following lines of code will have an event emitter emitting a change event?",
        "options": [
            " EventEmitter.emit('change');\r\n",
            " EventEmitter.new().emit('change');\r\n",
            " (new EventEmitter()).emit('change');\r\n",
            " new EventEmitter('change');\r\n\r\n**Explanation:** _Because the EventEmitter is already in scope. No need to create new one._\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q19. Which of the following objects is a stream",
        "options": [
            " process.uptime\r\n",
            " process.stdout\r\n",
            " process\r\n",
            " Buffer\r\n\r\n**Explanation:** _process.stdout is Buffer type._\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q20. Which module variable holds the resolved absolute path of the current module file?",
        "options": [
            " `__pathname`\r\n",
            " `__location`\r\n",
            " `__flder`\r\n",
            " `__filename`\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " 21. If the child_process module methods are in scope, what is a current way to execute the command ps -ef using a child process?",
        "options": [
            " spawn(\"ps -ef\")\r\n",
            " exec(\"ps -ef\")\r\n",
            " exec(\"ps\", \"-ef\")\r\n",
            " fork(\"ps -ef\")\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q22.Which console method can be used to print the stack trace to the point of its execution?",
        "options": [
            " stack\r\n",
            " trace\r\n",
            " debug\r\n",
            " print\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q23.When you run JavaScript in a Node.js application, which of the following elements in a Node.js stack actually executes that JavaScript?",
        "options": [
            " the libuv library\r\n",
            " the c-ares library\r\n",
            " the VM (like VS or Chakra)\r\n",
            " the repl module\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q24. Looking at the code below, what does the console show?",
        "code": "\r\nconst http = require('http');\r\n const hostname = '127.0.0.1'; const port = 3000;\r\n const server = http.createServer((req, res) => {\r\n  res.statusCode = 200;  res.setHeader(\"Content-Type\", \"text/plain\");  res.end(\"Hello World\\n\");\r\n});\r\nserver.listen(port, hostname, () => { console.log(`server running at http://${hostname}:${port}/`); });\r\n",
        "options": [
            " server running at http://localhost:3000/\r\n",
            " server running at port 3000\r\n",
            " server running at http://localhost:4000/\r\n",
            " server running at http://127.0.0.1:3000/\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q25.What is the purpose of the path module?",
        "options": [
            " to provide utilities to play with file and directory paths\r\n",
            " to provide utilities to add and remove files\r\n",
            " It is a retiring module.\r\n",
            " to provide utilities to test files\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q26.How do you make an HTTP server object active and listen to requests on certain ports?",
        "options": [
            " server. start\r\n",
            " server.activate\r\n",
            " server.listen\r\n",
            " server. run\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q27.What does the code shown below do?",
        "code": "\r\nconst fs = require('fs'); const os = require('os');\r\nconst system = os.platform(); const user = os.userInfo().username;\r\nfs.appendFile('hello.txt', `Hello ${user} on ${system}`, (err) => { if (err) throw err; console.log('The data was appended to file!');}\r\n);\r\n",
        "options": [
            " creates a text file hello.txt and appends customized text\r\n",
            " creates an image file\r\n",
            " console logs system information\r\n",
            " creates a file named data and append numbers\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q28.How do you start a Node application, if the entry file is indexjs?",
        "options": [
            " nodemon start\r\n",
            " start index.js\r\n",
            " node index.js\r\n",
            " node start\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q29.What is the purpose of the file system (fs) module?",
        "options": [
            " to provide methods to work with requests and responses\r\n",
            " to provide methods to work with files\r\n",
            " to provide methods to work with databases\r\n",
            " to find new file systems\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q30.What is the Node LTS version?",
        "options": [
            " It is the current unstable version and is to be avoided.\r\n",
            " It is the version that will be retired soon.\r\n",
            " It is the version with the latest features.\r\n",
            " It is the safest version for long-term support.\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q31. Which of the following is NOT a valid stream in Node?",
        "options": [
            " process. stdinfo\r\n",
            " process. stdin\r\n",
            " process. stdout\r\n",
            " process. stderr\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q32. You have a script.js file with the single line of code shown here. What will be the output of executing script.js with the node command?",
        "options": [
            " ReferenceError: arguments is not defined\r\n",
            " an empty string\r\n",
            " undefined\r\n",
            " an object representing an array that has five elements\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q33. Which choice is not a valid method on event emitters?",
        "options": [
            " start\r\n",
            " on\r\n",
            " once\r\n",
            " off\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q34. Which special object is an instance of EventEmitter?Which special object is an instance of null?",
        "options": [
            " process\r\n",
            " Buffer\r\n",
            " root\r\n",
            " require\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q35. What is the command to get a list of available commands for Node.js?What is the command to get a list of available commands for Node.js?",
        "options": [
            " node index.js -x\r\n",
            " node -v\r\n",
            " node -h\r\n",
            " node index.js -h\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q36. When a request event is received in the HTTP module, what is the type of the first argument passed to that event, usually named req?",
        "options": [
            " http.IncomingMessage\r\n",
            " http.ServerRequest\r\n",
            " http.ClientRequest\r\n",
            " http.ServerResponse\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q37. What are the arguments passed to the module wrapper function?",
        "options": [
            " `exports, __filename, __dirname`\r\n",
            " `exports, process, require, module, __filename, __dirname`\r\n",
            " `exports, module, __filename, __dirname`\r\n",
            " `exports, require, module, __filename, __dirname`\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q38. Which library provides Node.js with the event loop?",
        "options": [
            " V8\r\n",
            " c-ares\r\n",
            " libuv\r\n",
            " events\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q39. What does the .node file extension represent?",
        "options": [
            " a C++ file that can have a .node extension and that Node will be able to execute directly.\r\n",
            " a C++ Addon file that is built with node-gyp\r\n",
            " a JSON file that can have a .node extension as well as the .json extension\r\n",
            " a JavaScript file that can have a .node extension as well as the .js extension\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q40. What can you export with module.exports?",
        "options": [
            " only objects.\r\n",
            " only functions\r\n",
            " only variables and arrays\r\n",
            " functions, objects, arrays, or anything you assign to the module\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q41. Which core module in Node can you use to take advantage of multicore systems?",
        "options": [
            " os\r\n",
            " util\r\n",
            " cluster\r\n",
            " net\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q42. Which core Node module has wrappers for OpenSSL methods?",
        "options": [
            " SSL\r\n",
            " hash\r\n",
            " crypto\r\n",
            " TLS\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q43. Which line imports a promise-based version of the readFile method?",
        "options": [
            " const { readFile } = require(fs).promises\r\n",
            " const { readFile } = require(fs)\r\n",
            " const { readFilePromises: readFile } = require(fs)\r\n",
            " const { readFile } = require(promises)\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q44. According to the rules of semantic versioning, what does a release incrementing the third number in an npm version string communicate to users about the release changes?",
        "options": [
            " Changes are not backwards compatible.\r\n",
            " Changes might not be backward compatible and might break existing code.\r\n",
            " Changes are just bug fixes and no new features were added.\r\n",
            " Changes will add new functionality but will not break any existing code.\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q45. What does REPL stand for?",
        "options": [
            " run, examine, put, loop\r\n",
            " read, eval, print, loop\r\n",
            " run, edit, print, loop\r\n",
            " read, extend, print, loop\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q46. Which file does node-gyp use to read the build configuration of a module?",
        "options": [
            " .gyprc\r\n",
            " binding.gyp\r\n",
            " gyp.json\r\n",
            " package.gyp\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q47. Which core module in Node can you use for testing?",
        "options": [
            " chai\r\n",
            " jest\r\n",
            " assert\r\n",
            " mocha\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q48. Which core module in Node provides an API to register callbacks to track asynchronous resources created inside a Node.js application?",
        "options": [
            " cluster\r\n",
            " async_hooks\r\n",
            " dgram\r\n",
            " inspector\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q49. Which Node.js module should you use when you need to decode raw data into strings?",
        "options": [
            " buffer\r\n",
            " util\r\n",
            " string_decoder\r\n",
            " string_buffer\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q50. Which global object acts like a bridge between a Node script and the host operating system?",
        "options": [
            " v8\r\n",
            " env\r\n",
            " process\r\n",
            " child_process\r\n\r\n**Explanation:** _process is an global object and act like a bridge, the others aren't (please see https://nodejs.org/api/globals.html or https://nodejs.org/api/process.html#process_process)._\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q51. Which statement is true about Node.js and threads?",
        "options": [
            " Every Node process runs in a single thread, and all the I/O work is run in that same thread.\r\n",
            " Every Node process gets four threads that it can share between its JavaScript VM and the event loop.\r\n",
            " The event loop is single-threaded, but a JavaScript VM can use multiple threads.\r\n",
            " JavaScript execution in Node.js is single-threaded, but I/O operations are executed using multiple threads.\r\n\r\n**Explanation:** _https://www.geeksforgeeks.org/why-node-js-is-a-single-threaded-language/_\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q52. Which statement about event emitters is false?",
        "options": [
            " Event names must be camelCase strings.\r\n",
            " The emit method allows a arbitrary set of arguments to be passed to the listener functions.\r\n",
            " Any values returned by the listeners for an emitted events are ignored.\r\n",
            " When an event emitter objeect emits an event, all of the functions attached to that specific event are called synchronously.\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q53. Which core module in Node can you use to compile and run JavaScript code in a sandbox environment?",
        "options": [
            " sandbox\r\n",
            " buffer\r\n",
            " vm\r\n",
            " v8\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q54. How would you determine the number of cluster instances to start when using the cluster module?",
        "options": [
            " const numInstances = cluster.instances().length;\r\n",
            " const numInstances = cluster.instances();\r\n",
            " const numInstances = require('os').cpus().length;\r\n",
            " const numInstances = process.cpus().length;\r\n\r\n**Explanation:** _From official docs: [https://nodejs.org/api/cluster.html#cluster_cluster](https://nodejs.org/api/cluster.html#cluster_cluster)_\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q55. You have to read a large text file, replace some words in it, and write it back to a new file. You know that the memory on your target system is limited. What should you do?",
        "options": [
            " Use regular expressions directly on the file.\r\n",
            " Use Promises and async/await to offload the task to libuv.\r\n",
            " Copy the file into a database and perform the operations there.\r\n",
            " Use readline together with streams to read and transform and write the file contents line by line.\r\n\r\n**Explanation:** _From official docs: [https://nodejs.org/api/readline.html#readline_example_read_file_stream_line_by_line](https://nodejs.org/api/readline.html#readline_example_read_file_stream_line_by_line)_\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q56. Which choice is `not` a Node global object?",
        "options": [
            " process\r\n",
            " exports\r\n",
            " setTimeout\r\n",
            " Buffer\r\n\r\n**Explanation:** _process, exports and setTimeout are global objects, Buffer isn't (please see https://nodejs.org/api/globals.html)_\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q57. What is the correct way to pipe a readable stream and a writable stream?",
        "options": [
            " readableStream.pipe(writableStream)\r\n",
            " readableStream.on(pipe, writableStream)\r\n",
            " writableStream.pipe(readableStream)\r\n",
            " writableStream.on(pipe, readableStream)\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q58. How can you convert path segments into a string using the platform-specific separator as a delimiter?",
        "options": [
            " path.concat\r\n",
            " path.join\r\n",
            " path.format\r\n",
            " path.parse\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q59. What is the purpose of N-API?",
        "options": [
            " to allow users to make requests to the server\r\n",
            " to insulate Addons from changes in the underlying JavaScript engine\r\n",
            " to execute multi-threaded code in the Node environment\r\n",
            " to provide a quick way for users to create REST APIs\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q60. What is a process object and its role?",
        "options": [
            " a locally scoped object that provides information about the current node process\r\n",
            " a global object that provides information about files\r\n",
            " a global object that provides information about the database\r\n",
            " a global object that provides information about the current node process\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q61. What will this code log to the console?",
        "code": "\r\n// File: person.js\r\nexports.name = \"Jane\";\r\n\r\n// File: index.js\r\nconst person = require('./person.js');\r\nconsole.log(person);\r\n",
        "options": [
            " `{'Jane'}`\r\n",
            " `{ name: 'Jane' }`\r\n",
            " `{}`\r\n",
            " `Jane`\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q62. What will this code log to the console?",
        "code": "\r\n// File: person.js\r\nexports = \"John\";\r\n\r\n// File: index.js\r\nconst person = require('./person.js');\r\nconsole.log(person);\r\n",
        "options": [
            " `John`\r\n",
            " `Undefined`\r\n",
            " `{'John'}`\r\n",
            " `{}`\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q63. Is it possible to write tests in Node.js without an external library?",
        "options": [
            " yes, through the assert module\r\n",
            " yes, through the debugger module\r\n",
            " yes, through the console module\r\n",
            " no\r\n\r\n**From the article:** [Making a Testing Framework in Node.js (Without any External Libraries)](https://www.sohamkamani.com/blog/javascript/making-a-node-js-test-runner/)\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q64. Which assert module method is usually used to test the error-first argument in callbacks?",
        "options": [
            " fail\r\n",
            " doesNotThrow\r\n",
            " deepStrictEqual\r\n",
            " ifError\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q65. Which choice is not a method on the util module?",
        "options": [
            " promisify\r\n",
            " asyncify\r\n",
            " types\r\n",
            " callbackify\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q66. Which choice is not a subclass of the Error class?",
        "options": [
            " GlobalError\r\n",
            " TypeError\r\n",
            " RangeError\r\n",
            " AssertionError\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q67. What is Node built on?",
        "options": [
            " Python\r\n",
            " V8 JavaScript engine\r\n",
            " PHP\r\n",
            " c\r\n\r\n"
        ],
        "correctAns": 2
    }
]