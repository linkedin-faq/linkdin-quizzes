[
    {
        "query": " Q1. Scala bytecode can run on top of Java VM. What is the fundamental difference between Java object.clone() and Scala object.copy()?",
        "options": [
            " One is a Java object, the other is a Scala object.\r\n",
            " clone() will copy class structures but not the data, while copy() will also copy data into new objects.\r\n",
            " There is no difference.\r\n",
            " copy() allows you to change values during the copying process; clone() does not.\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q2. What value does this code return?",
        "code": "scala\r\nval m1 = Map(\"a\"->1,\"b\"->2,\"c\"->3)\r\nm1(\"a\")\r\n",
        "options": [
            " a\r\n",
            " 2\r\n",
            " b\r\n",
            " 1\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q3. What is one way to avoid low-level parallelization details?",
        "options": [
            " monads\r\n",
            " literal functions\r\n",
            " partially applied functions\r\n",
            " parallel collections\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q4. What do you use in ScalaTest to see a detailed diagram of error messages when a test fails?",
        "options": [
            " ArgumentExceptions\r\n",
            " AssertionException\r\n",
            " DiagrammedAssertions\r\n",
            " JUnit\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q5. What data type would you use to store an immutable collection of objects that contain a fixed number of varying types?",
        "options": [
            " Array\r\n",
            " ImmutableCollection\r\n",
            " List\r\n",
            " Tuple\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q6. After defining a function in the interpreter, Scala returns the following. What does the `()` indicate?",
        "code": "\r\nmyfnc: ()Unit\r\n",
        "options": [
            " The function has no side effects.\r\n",
            " The function takes no parameters.\r\n",
            " The function returns no value.\r\n",
            " Returning unit types to the function is a closures.\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q7. What type of number is 1234.e5?",
        "options": [
            " hexadecimal\r\n",
            " short\r\n",
            " floating point\r\n",
            " long\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q8. When you convert a map to a list using the `toList` method of the map, the result will be of which type?",
        "options": [
            " `List[(String, String)]`\r\n",
            " `List[(Array, Array)]`\r\n",
            " `List[(Collection, Collection)]`\r\n",
            " `List`\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q9. What type of object does this code create?",
        "code": "\r\nval x = (1234, \"Active\")\r\n",
        "options": [
            " List\r\n",
            " Map\r\n",
            " Tuple\r\n",
            " Array\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q10. Which is a subclass of all classes?",
        "options": [
            " AnyVal\r\n",
            " AnyRef\r\n",
            " Method\r\n",
            " Null\r\n\r\n**Reference**: [Null in Scala Standard library](https://www.scala-lang.org/api/current/scala/Null.html). The question is a bit incorrect - Null is a subtype of every type _except those of value classes_\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q13. What is the value of z after executing this code?",
        "code": "\r\nval y = List('a','b')\r\nval z = y::List('c')\r\n",
        "options": [
            " List(a,b,c)\r\n",
            " List(List(a, b), c)\r\n",
            " List(c,a,b)\r\n",
            " List(c,List(a,b))\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q14. What term is used to specify a precondition?",
        "options": [
            " assert\r\n",
            " require\r\n",
            " precondition\r\n",
            " mustHave\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q15. Which Scala type may throw an exception or a successfully computed value, and is commonly used to trap and propagate errors?",
        "options": [
            " `scala.util.ExceptionHandling`\r\n",
            " `scala.Catch.Throw`\r\n",
            " `scala.exception.TryFinally`\r\n",
            " `scala.util.Try`\r\n\r\n**Reference**: [scala.util.Try](https://www.scala-lang.org/api/current/scala/util/Try.html)\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q16. What is the data type of y after this code is executed?",
        "code": "\r\nval y = (math floor 3.1415 * 2)\r\n",
        "options": [
            " short\r\n",
            " double\r\n",
            " int\r\n",
            " bigInt\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q17. When using pattern matching, which character matches on any object?",
        "options": [
            " `%`\r\n",
            " `_`\r\n",
            " `^`\r\n",
            " `-`\r\n\r\n**Reference**: [Pattern Matching](https://docs.scala-lang.org/tour/pattern-matching.html)\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q19. What is the output of this function?",
        "code": "scala\r\ndef main () {\r\n     var a = 0\r\n     for (a<-1 until 5){println(a)}\r\n",
        "options": [
            " 1,2,3,4,5\r\n",
            " 0,1,2,3,4\r\n",
            " 1,2,3,4\r\n",
            " 2,3,4,5\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q20. What do you call objects with immutable state?",
        "options": [
            " singletons\r\n",
            " stationary objects\r\n",
            " functional objects\r\n",
            " fixed objects\r\n\r\n**Note:** singletons may have mutable state\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q21. You have written a Scala script. How would you access command-line arguments in the script?",
        "options": [
            " use array named args\r\n",
            " use tuple named args\r\n",
            " use numbered variables with a _ prefix for example _ 1, _ 2, _ 3\r\n",
            " use numbered variables with a $ prefix - for example $1, $2, $3\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q22. What does this code return? `val x = 3; if (x > 2) x = 4 else x = x*2`",
        "options": [
            " 4\r\n",
            " an error\r\n",
            " 6\r\n",
            " 3\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q23. Which statement returns a success or a failure indicator when you execute this code?",
        "options": [
            " myFuture.onComplete\r\n",
            " myFuture(status)\r\n",
            " myFuture.Finished\r\n",
            " complete(myFuture)\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q24. To denote a parameter that may be repeated, what should you place after type?",
        "options": [
            " `%`\r\n",
            " `&`\r\n",
            " `_`\r\n",
            " `-`\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q25. What is called when a superclass has more than one subclass in Scala?",
        "options": [
            " polyinheritance\r\n",
            " multilevel inheritance\r\n",
            " multimode inheritance\r\n",
            " hierarchical inheritance\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q26. One way to improve code reliability is to use `__` , which will evaluate a condition and return an error if the condition is violated.",
        "options": [
            " packages\r\n",
            " polymorphisms\r\n",
            " assertions\r\n",
            " traits\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q27. Which statement about if-else-if-else statements is true?",
        "options": [
            " If the first else-if does not succeed, then no other else-ifs are tested.\r\n",
            " If an else-if does not succeed, then none of the remaining else-if statements or elses will be tested.\r\n",
            " All else-if statements are tested in all cases.\r\n",
            " If an else-if succeeds, then none of the remaining else-if statements or elses will tested.\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q28. What do you call the process of changing the definition of an inherited method?",
        "options": [
            " recursive methods\r\n",
            " currying methods\r\n",
            " redefining methods\r\n",
            " overriding methods\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q29. To denote a parameter that may be repeated, what should you place after the type?",
        "options": [
            " `_`\r\n",
            " `*`\r\n",
            " `%`\r\n",
            " `&`\r\n\r\n**Reference**: [Repeated Parameters in Scala](https://www.baeldung.com/scala/repeated-parameters)\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q30. What is the code below equivalent to?",
        "code": "scala\r\nmyClass.foreach(println _)\r\n",
        "options": [
            " `myClass.foreach(println ())`\r\n",
            " `myClass.foreach(print NIL)`\r\n",
            " `myClass.loop(println ())`\r\n",
            " `myClass.foreach(x => println(x))`\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q31. What is an advantage of an immutable object?",
        "options": [
            " Immutable objects use less memory than their mutable counterparts.\r\n",
            " Immutable objects do not require error handling.\r\n",
            " Immutable objects can be used in classes, mutable objects cannot.\r\n",
            " Immutable objects are threadsafe.\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q32. You want to create an iteration loop that tests the condition at the end of the loop body. Which iteration would you use?",
        "options": [
            " do-while loop\r\n",
            " while loop\r\n",
            " for loop\r\n",
            " do-until loop\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q33. What can you use to make querying a database more efficient, by avoiding the need to parse the SQL string every time a query is executed from Scala?",
        "options": [
            " database driver\r\n",
            " connection\r\n",
            " prepared statement\r\n",
            " SQL view\r\n\r\n**Reference**: [PreparedStatement from Java](https://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html) which is also used in Scala\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q34. Which is _not_ a member of the collections hierarchy?",
        "options": [
            " Set\r\n",
            " Seq\r\n",
            " Hash\r\n",
            " Map\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q35. Which term makes the contents of packages available without prefixing?",
        "options": [
            " use\r\n",
            " include\r\n",
            " import\r\n",
            " assertion\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q36. If you wanted to find the remainder after division, what operator would you use?",
        "options": [
            " %\r\n",
            " DIV\r\n",
            " //\r\n",
            " /\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q37. What are defined inside a class definition?",
        "options": [
            " method\r\n",
            " fields and methods\r\n",
            " fields, methods, and packages\r\n",
            " fields\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q38. What defines methods and fields that can then be reused by mixing into classes?",
        "options": [
            " singleton\r\n",
            " assertion\r\n",
            " trait\r\n",
            " monad\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q39. When do you need to explicitly state the return type in a function definition?",
        "options": [
            " when the function has no side effects\r\n",
            " when the function returns a Unit type\r\n",
            " when the function is recursive\r\n",
            " when the function has side effects\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q40. Why would you make a field private?",
        "options": [
            " so only methods in the same file can access the field\r\n",
            " so only methods in the same package can access the field\r\n",
            " so only methods in the same class could access the field\r\n",
            " so only methods defined in a Java class can access the field\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q41. What's the difference between `.equals` and `==`?",
        "options": [
            " They do the exact same thing\r\n",
            " `==` won't work on objects\r\n",
            " `==` cannot be applied to `String`\r\n",
            " `==` is a wrapper of `.equals()` and checks for nulls\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q42. What is denotes the intersection between two sets?",
        "options": [
            " ||\r\n",
            " &&\r\n",
            " &\r\n",
            " %\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q46. What type of exception is thrown when a precondition is violated?",
        "options": [
            " IllegalArgumentException\r\n",
            " NumberFormatException\r\n",
            " NullPointerExcepetion\r\n",
            " MalformedParameterException\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q47. In scala what is precondition?",
        "options": [
            " a constraint on where a method may be called from\r\n",
            " a constraint on values passed to a methode constructor\r\n",
            " a class of predifined error messages\r\n",
            " a class of Boolean operators\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q48. What would you change in this code to make it execute in parallel?",
        "code": "\r\n val myNums = (1 to 500).toList\r\n list.map(_ + 1)\r\n",
        "options": [
            " Change **list.map** to **list.par.map.**\r\n",
            " Change **toList** to **toListPar**\r\n",
            " Change **val** to **val.par**\r\n",
            " Change **toList** to **toParallelList**\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q49. What is a free variable?",
        "options": [
            " a variable defined outside a function\r\n",
            " a variable referenced in a function that is not assigned a value by that function\r\n",
            " a variable that has a global scope\r\n",
            " a variable defined in a class and available to all methods in that class\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q50. What is the difference between .equals() and == ?",
        "options": [
            " **==** is wrapper of **.equals()** and checks for Nulls\r\n",
            " They do the exact same thing.\r\n",
            " == cannot be applied to String.\r\n",
            " == won't work on objects\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q51. What's the best way to execute code in the background in a separate thread?",
        "options": [
            " AltThread\r\n",
            " AltFuture\r\n",
            " AltProcess\r\n",
            " Future\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q53. What value does this code return?",
        "code": "scala\r\nx= List(1,2,4); x(1)?\r\n",
        "options": [
            " (1,2,4)\r\n",
            " 1\r\n",
            " Nil\r\n",
            " 2\r\n"
        ],
        "correctAns": 4
    }
]