[
    {
        "query": "",
        "code": null,
        "options": [
            "\r\n\r\n```c\r\nwhile(1)\r\n{\r\n    char *smallString = (char *) malloc(10);\r\n}\r\n```\r\n\r\n",
            "\r\n\r\n```c\r\nlong long number = 1;\r\n    while(1)\r\n    number *= 2;\r\n```\r\n\r\n",
            "\r\n\r\n```c\r\nwhile(1)\r\n{\r\n    char hugeString[1000000L];\r\n    memset(hugeString, 0, 1000000L);\r\n}\r\n```\r\n\r\n",
            "\r\n\r\n```c\r\nwhile(1)\r\n{\r\n    long *bigArray = (long *) malloc(sizeof(long) * 1000);\r\n    memset(bigArray, 1000000, 1000);\r\n    free(bigArray);\r\n}\r\n```\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q2. What will this code print on the screen?",
        "code": null,
        "options": [
            "\r\n\r\n```\r\nA is greater then B\r\nC is fun!\r\n```\r\n\r\n",
            "\r\n\r\n```\r\nA is greater then B\r\nB is greater then A\r\nC is fun!\r\n```\r\n\r\n",
            "\r\n\r\n```\r\nA is greater then B\r\nB is greater then A\r\n```\r\n\r\n",
            " Nothing is printed on Screen\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q3. What is the name for calling a function inside the same function?",
        "options": [
            " recursion\r\n",
            " subfunction\r\n",
            " inner call\r\n",
            " infinite loop\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q4. What does the declaration of variable c2 demonstrate?",
        "code": "c\r\nmain(){\r\n    char c1 ='a';\r\n    char c2 = c1+10;\r\n}\r\n",
        "options": [
            " character arithmetic\r\n",
            " undefined assignment\r\n",
            " type conversion\r\n",
            " invalid declaration\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q5. A pointer to void named vptr, has been set to point to a floating point variable named g. What is the valid way to dereference vptr to assign its pointed value to a float variable named f later in this program?",
        "code": "c\r\nfloat g;\r\nvoid *vptr=&g;\r\n",
        "options": [
            " f = _(float _)vptr;\r\n",
            " f = (float \\*)vptr;\r\n",
            " f = \\*(float \\*)vptr;\r\n",
            " f = \\*(float)vptr;\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q6. What is this declaration an example of?",
        "code": "c\r\nstruct s {\r\n    int i;\r\n    struct s *s1;\r\n    struct s *s2;\r\n};\r\n",
        "options": [
            " a node\r\n",
            " a linked list\r\n",
            " a stack\r\n",
            " a binary tree\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q7. A C header file is a file with extension .h that contains function declarations and macro definitons to be shared between several source files. Header files are listed using the preprocessing directive ",
        "options": [
            " The preprocessor will try to locate the fileA in same directory as the source file, and the fileB in a predetermined directory path.\r\n",
            " The preprocessor will try to locate the fileA in the fixed system directory. It will try to locate fileB in the directory path designated by the -l option added to the command line while compiling the source code.\r\n",
            " The file using fileA syntax must be system files, of unlimited number. fileB must be a user file at a maximun of one per source file.\r\n",
            " The preprocessor will try to locate the fileA in a predetermined directory path. It will try to locate fileB in the same directory as the source file along with a custom directory path.\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q8. Using a for loop, how could you write a C code to count down from 10 to 1 and display each number on its own line?",
        "code": null,
        "options": [
            "\r\n\r\n```c\r\nfor (int i = 0; i>=0, i--){\r\n    printf(\"%d\\n\", i);\r\n}//end of loop\r\n```\r\n\r\n",
            "\r\n\r\n```c\r\nint i;\r\nfor (i=1; i<=10; i++){\r\n    printf(\"%d\", i);\r\n}\r\n```\r\n\r\n",
            "\r\n\r\n```c\r\nint i = 10;\r\nwhile (i>0){\r\n    printf(\"%d\\n\", i);\r\n    i--;\r\n}\r\n```\r\n\r\n",
            "\r\n\r\n```c\r\nint i;\r\nfor (i= 10; i>0; i--){\r\n    printf(\"%d\\n\", i);\r\n}// end of loop\r\n```\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q9. What is not one of the reserved words in standard C?",
        "options": [
            " volatile\r\n",
            " typeof\r\n",
            " register\r\n",
            " typedef\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q10. What does the program shown below return?",
        "code": "c\r\nint main(){\r\n    int a=1, b=2, c=3, d=4;\r\n    int x = a;\r\n    if (a>b)\r\n    if (b<c) x=b;\r\n    else x=c;\r\n    return(x);\r\n}\r\n",
        "options": [
            " 1\r\n",
            " 3\r\n",
            " 2\r\n",
            " 0\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q11. Using the Union declaration below, how many bytes of memory space will the data of this type occupy?",
        "code": "c\r\nunion Cars {\r\n    char make[20];\r\n    char model[30];\r\n    short year;\r\n} car;\r\n",
        "options": [
            " 32\r\n",
            " 54\r\n",
            " 30\r\n",
            " 52\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q12. In this code sample, what is not a problem for C compiler?",
        "code": "c\r\nmain(){\r\n    constant int PI = 3.14;\r\n    printf(\"%f\\n\", pi);\r\n}\r\n",
        "options": [
            " The value of PI needs to be set to 3.141593, not 3.14\r\n",
            " The declaration of PI needs to say const, not constant.\r\n",
            " The data type of PI needs to be float not int.\r\n",
            " The printf statement needs to use PI, not pi.\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q13. Which is the smallest program to compile and run without errors?",
        "options": [
            " main()\r\n",
            " int main() {return 0;}\r\n",
            " main() { }\r\n",
            " main() { ; }\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q14. What is optional in a function declaration?",
        "options": [
            " data type of parameters\r\n",
            " return type of function\r\n",
            " parameter names\r\n",
            " number of parameters\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q15. C treats all devices, such as the display and the keyboard, as files. Which files opens automatically when a program executes?",
        "options": [
            " stdout\r\n",
            " stdio.h\r\n",
            " default.h\r\n",
            " string.h\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q16. In which segment does dynamic memory allocation takes place?",
        "options": [
            " BSS Segment\r\n",
            " stack\r\n",
            " heap\r\n",
            " data segment\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q17. Which of the following do you use to deallocate memory?",
        "options": [
            " dalloc()\r\n",
            " dealloc()\r\n",
            " release()\r\n",
            " free()\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q18. In C language what are the basic building blocks that are constructed together to write a program?",
        "options": [
            " keywords\r\n",
            " identifiers\r\n",
            " tokens\r\n",
            " functions\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q19. When is memory for a variable allocated?",
        "options": [
            " during the assigment of the variable\r\n",
            " during the initialization of the variable\r\n",
            " during the declaration of the variable\r\n",
            " during the definition of the variable\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q20. By default c uses the call by value method to pass arguments to functions. How can you invoke the call by reference method?",
        "options": [
            " by using pointers\r\n",
            " by declaring functions separately from defining them\r\n",
            " by using recursive functions\r\n",
            " by using global variables\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q21. A union allows you to store different `___` in the same `___`.",
        "options": [
            " Objects; Structure\r\n",
            " Variables; Declaration\r\n",
            " Data types; Memory location\r\n",
            " Arrays; Header file\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q22. What is the output of this program?",
        "code": "c\r\nmain() {\r\n    char c1='a' , c2='A';\r\n    int i=c2-c1;\r\n    printf(\"%d\", i);\r\n}\r\n",
        "options": [
            " 32\r\n",
            " Runtime error\r\n",
            " -32\r\n",
            " 0\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q23. What is the difference between scanf() and sscanf() functions?",
        "options": [
            " The scanf() function reads data formatted as a string; The sscanf() function reads string input from the screen.\r\n",
            " The scanf() function reads formatted data from the keyboard; The sscanf() function reads formatted input from a string.\r\n",
            " The scanf() function reads string data from the keyboard; The sscanf() function reads string data from a string.\r\n",
            " The scanf() function reads formatted data from a file; The sscanf() function reads input from a selected string\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q24. What is not a valid command with this declaration?",
        "code": "c\r\nchar *string[20] = { \"one\", \"two\", \"three\"};\r\n",
        "options": [
            " printf(\"%c\", string[1][2]);\r\n",
            " printf(\"%s\", string[1][2]);\r\n",
            " printf(\"%s\", string[1]);\r\n",
            " printf(string[1]);\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q25. What is the expression player->name equivalent to?",
        "options": [
            " player.name\r\n",
            " (\\*player).name\r\n",
            " \\*player.name\r\n",
            " player.\\*name\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q26. Which program will compile and run without errors?",
        "code": null,
        "options": [
            "\r\n\r\n```c\r\nmain() {\r\n    for(i=0; i<10; i++) ;\r\n}\r\n```\r\n\r\n",
            "\r\n\r\n```c\r\nmain() {\r\nint i=0;\r\n    for(; i<10; i++) ;\r\n}\r\n```\r\n\r\n",
            "\r\n\r\n```c\r\nmain() {\r\n    int i;\r\n    for(i=0; i<j; i++) ;\r\n}\r\n```\r\n\r\n",
            "\r\n\r\n```c\r\nmain() {\r\nint i;\r\n    for (i= 10; i<10; i++)\r\n}\r\n```\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q27. What does this function call return?",
        "code": "c\r\n1 main() { float x = f1(10, 5); }\r\n2 float f1(int a, int b) { return (a/b); }\r\n",
        "options": [
            " 2\r\n",
            " 2.000000\r\n",
            " a runtime error\r\n",
            " a compiler error\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q28. What does this program create?",
        "code": "c\r\n#include <stdio.h>\r\nint main() {\r\n    int *p = NULL;\r\n    return 0;\r\n}\r\n",
        "options": [
            " a runtime error\r\n",
            " a NULL pointer\r\n",
            " a compile error\r\n",
            " a void pointer\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q29. What is an alternative way to write the expression (\\*x).y?",
        "options": [
            " There is no equivalent.\r\n",
            " x->y\r\n",
            " \\*x->y\r\n",
            " y->x\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q30. Compile time errors are static errors that can be found where in the code?",
        "options": [
            " in declarations and definitions\r\n",
            " in functions and expressions\r\n",
            " in syntax and semantics\r\n",
            " in objects and statements\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q31. File input and output (I/O) in C is heavily based on the way it is done `___`?",
        "options": [
            " in Unix\r\n",
            " in C++\r\n",
            " in C#\r\n",
            " in DOS\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q32. What does the strcmp(str1, str2); function return?",
        "options": [
            " 0 if str1 and str2 are the same, a negative number if str1 is less than str2, a positive number if str1 is greater than str2\r\n",
            " true (1) if str1 and str2 are the same, false (0) if str1 and str2 are not the same\r\n",
            " true (1) if str1 and str2 are the same, NULL if str1 and str2 are not the same\r\n",
            " 0 if str1 and str2 are the same, a negative number if str2 is less than str1, a positive number if str2 is greater than str1\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q33. What is the output of this program?",
        "code": "c\r\nint a=10, b=20;\r\nint f1(a) { return(a*b); }\r\nmain() {\r\nprintf(\"%d\", f1(5));\r\n}\r\n",
        "options": [
            " 100\r\n",
            " 200\r\n",
            " 5\r\n",
            " 50\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q34. Which is _not_ a correct way to declare a string variable?",
        "options": [
            " `char *string = \"Hello World\";`\r\n",
            " `char string = \"Hello World\";`\r\n",
            " `char string[20] = {'H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd'};`\r\n",
            " `char string[] = \"Hello World\";`\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q35. Which choice is an include guard for the header file mylib.h?",
        "code": null,
        "options": [
            "\r\n\r\n```c\r\n#ifdef MYLIB_H\r\n#undef MYLIB_H\r\n\r\n// mylib.h content\r\n\r\n#endif /* MYLIB_H */\r\n```\r\n\r\n",
            "\r\n\r\n```c\r\n#ifndef MYLIB_H\r\n#define MYLIB_H\r\n\r\n// mylib.h content\r\n\r\n#endif /* MYLIB_H */\r\n```\r\n\r\n",
            "\r\n\r\n```c\r\n#define MYLIB_H\r\n#include \"mylib.h\"\r\n\r\n#undef MYLIB_H\r\n```\r\n\r\n",
            "\r\n\r\n```c\r\n#ifdef MYLIB_H\r\n#define MYLIB_H\r\n\r\n// mylib.h content\r\n\r\n#endif /* MYLIB_H */\r\n```\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q36. How many times does the code inside the while loop get executed in this program?",
        "code": "c\r\nmain(){\r\n int x=1;\r\n while(x++<100){\r\n    x*=x;\r\n    if(x<10) continue;\r\n    if(x>50) break\r\n }\r\n}\r\n",
        "options": [
            " 100\r\n",
            " 3\r\n",
            " 5\r\n",
            " 50\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q37. File input and output (I/O) in C is done through what?",
        "options": [
            " syntax-driven components\r\n",
            " native interfaces\r\n",
            " system objects\r\n",
            " function calls\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q38. Directives are translated by the?",
        "options": [
            " Pre-processor\r\n",
            " Compiler\r\n",
            " Linker\r\n",
            " Editor\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q39. The main loop structures in C programming are the for loop, the while loop, and which other loop?",
        "options": [
            " do...while\r\n",
            " for...in\r\n",
            " repeat...until\r\n",
            " do...until\r\n"
        ],
        "correctAns": 1
    }
]